#!/bin/bash

# eg. alias e=echo

# Bundler Commands
alias bi='bundle install'
alias bx='bundle exec'

# Use Zeus if available otherwise Ruby
function rt {
  if [ -e .zeus.sock ]; then
    bundle exec zeus test $@
  elif grep -q "spring-commands-testunit" Gemfile; then
    bundle exec spring testunit $@
  else
    bundle exec ruby -Itest $@
  fi
}

# Git Commands
alias gs='git status'
alias ga='git add'
function git_push {
  if git rev-parse --git-dir > /dev/null 2>&1; then
    branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
    if [[ "$branch" != "HEAD" ]]; then
      if [[ "$branch" =~ "master" ]]; then
        echo "push master, Are you sure? (y/n)"
        read REPLY
        if [[ $REPLY =~ ^[Yy]$ ]]; then
          if [[ -n "$@"  ]]; then
            echo 'no force push master'
          else
            git push origin $branch
          fi
        else
          echo 'git push aborted.'
        fi
      # branch is not master, allow force option if passed
      else
        git push origin $branch $@
      fi
    else
      echo 'not on a branch'
    fi
  else
    echo 'Not a git repo'
  fi
}
alias gp='git_push'

# Heroku Commands
function creds2heroku {
  if [[ -f ".env" ]]; then
    cat .env | while read line
    do
      echo $line
      heroku config:set $line
      echo ""
    done
  else
    echo "no .env file in current directory"
  fi
}

# Coffeescript
alias cw='coffee -bcw *.coffee'

# Shopify release script
# expects a version number
function s_release {
  if git rev-parse --git-dir > /dev/null 2>&1; then
    branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
    if [[ "$branch" =~ "master" ]]; then
      if [[ -z "$1" ]]; then
        echo 'No version given'
      else
        echo "have you updated the version file and changelog? (y/n)"
        read REPLY
        if [[ $REPLY =~ ^[Yy]$ ]]; then
          git add .
          git commit -m "Release v$1"
          git push origin master
          git tag -m "Release $1" "v$1"
          git push --tags origin master
        fi
      fi
    else
      echo 'Can only release on Master branch'
    fi
  else
    echo 'Not a git repo'
  fi
}

# Shopify Vagrant Commands
alias vup='VAGRANT_CWD=/Users/kevin/vagrant vagrant up'
alias vssh='VAGRANT_CWD=/Users/kevin/vagrant vagrant ssh'

function clean_nfs {
  find | grep "\._" | xargs rm
}
