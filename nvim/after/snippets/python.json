{
  "#!/usr/bin/env python": {
    "prefix": ["shebang"],
    "body": "#!/usr/bin/env python\n$0",
    "description": "Adds shebang line for default python interpreter."
  },
  "if __name__ == \"__main__\"": {
    "prefix": "ifmain",
    "body": "if __name__ == \"__main__\":\n\t${1:main()}$0",
    "description": "Create implicitly all the code at the top level using the __name__ special variable."
  },
  "Files in Directory": {
    "prefix": "files",
    "body": "for file in glob.glob(${1:value}):\n    $0",
    "description": "iterate files in a directory"
  },
  "File Read": {
    "prefix": "fileread",
    "body": "f = open(\"demofile.txt\", \"r\")\nprint(f.read())",
    "description": "read the contents of a file"
  },
  "File Write": {
    "prefix": "filewrite",
    "body": "f = open(\"demofile2.txt\", \"a\")\nf.write(\"Now the file has more content!\")\nf.close()",
    "description": "write to file"
  },
  "List comprehension": {
    "prefix": "lc",
    "body": "[${1:value} for ${2:value} in ${3:iterable}]$0",
    "description" : "List comprehension for creating a list based on existing lists."
  },
  "List comprehension if else": {
    "prefix": "lcie",
    "body": "[${1:value} if ${2:condition} else ${3:condition} for ${4:value} in ${5:iterable}]$0",
    "description" : "List comprehension for creating a list based on existing lists, with conditional if-else statement."
  },
  "List comprehension if filter": {
    "prefix": "lci",
    "body": "[${1:value} for ${2:value} in ${3:iterable} if ${4:condition}$0]",
    "description" : "List comprehension for creating a list based on existing lists, with conditional if statement."
  },
  "Dictionary comprehension": {
    "prefix": "dc",
    "body": "{${1:key}: ${2:value} for ${3:key}, ${4:value} in ${5:iterable}}$0",
    "description" : "Handy and faster way to create dictories based on existing dictionaries."
  },
  "Dictionary comprehension if filter": {
    "prefix": "dci",
    "body": "{${1:key}: ${2:value} for ${3:key}, ${4:value} in ${5:iterable} if ${6:condition}}$0",
    "description" : "Handy and faster way to create dictories based on existing dictionaries, with conditional if statement."
  },
  "Set comprehension": {
    "prefix": "sc",
    "body": "{${1:value} for ${2:value} in ${3:iterable}}$0",
    "description" : "Create a set based on existing iterables."
  },
  "Set Comprehension if filter": {
    "prefix": "sci",
    "body": "{${1:value} for ${2:value} in ${3:iterable} if ${4:condition}}$0",
    "description" : "Create a set based on existing iterables, with condition if statement."
  },
  "Generator comprehension": {
    "prefix": "gc",
    "body": "(${1:key} for ${2:value} in ${3:iterable})$0",
    "description" : "Create a generator based on existing iterables."
  },
  "Generator comprehension if filter": {
    "prefix": "gci",
    "body": "(${1:key} for ${2:value} in ${3:iterable} if ${4:condition})$0",
    "description" : "Create a generator based on existing iterables, with condition if statement."
  }
}
