#!/usr/bin/env zsh

# start a new pair programming session from my machine using ttyd
# the function will create a new tmux session named 'pair' which
# can be attached to locally and paused.

function pair() {
  if [ -v $1 ]; then
    echo "USAGE: pair username"
    return 1
  fi

  # generate a new password
  local username="$1"
  local password=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

  # ip for printing the link
  local ip=$(hostname -I | awk '{print $1}')

  # colors
  local theme='
    theme={
      "foreground":"#abb2bf",
      "background":"#282c34",
      "green":"#98c379",
      "brightGreen":"#98c379",
      "brightBlue":"#61afef"
    }
  '
  theme=${theme//$'\n'} # remove newlines
  theme=${theme//$' '} # remove spaces

  echo "Starting pair session"
  echo "------------------------------------------------------------"
  echo "connect using a browser at: $ip:7681"
  echo "username: $username"
  echo "password: $password"
  echo ""
  echo "run 'pair-connect' to connect to the session locally"
  echo "use 'pair-pause' and 'pair-unpause' to toggle readonly mode"
  echo "------------------------------------------------------------"

  # start tmux session
  tmux new-session -s pair -c $(pwd) -d

  # ttyd
  # https://github.com/tsl0922/ttyd/wiki/Client-Options
  # --check-origin Do not allow websocket connection from different origin
  ttyd \
    --credential "$username:$password" \
    --index "$HOME/dotfiles/pair.html" \
    --client-option titleFixed="pair session" \
    --client-option fontFamily="Hack Nerd Font" \
    --client-option fontSize=14 \
    --client-option disableLeaveAlert=true \
    --client-option ${theme} \
    --max-clients 1 \
    --check-origin \
    tmux attach-session -t pair

  # cleanup tmux session
  tmux kill-session -t pair
}

function pair-connect() {
  tmux attach-session -t pair
}

function pair-pause() {
  local pair_clients=$(tmux list-clients -t pair -F "#{client_pid} #{client_tty} #{client_readonly}")
  local pair_pid=$(pgrep -P "$(pidof ttyd)")
  local pair_client=$(echo $pair_clients | grep $pair_pid)
  local pair_tty=$(echo $pair_client | cut -d ' ' -f2)
  local pair_readonly=$(echo $pair_client | cut -d ' ' -f3)

  if (( $pair_readonly == 1 )); then
    echo "pair is already paused"
  else
    # make tmux client readonly
    tmux switch-client -c $pair_tty -t pair -r

    # display message to the client.
    local pause_message="****** Session Paused ******"
    (tmux display-popup -c $pair_tty -h 8 -w 30 echo "$pause_message" &)

    echo "Paused pairing session (pair is readonly now)"
    echo "---------------------------------------------"
    read -s -k "?Press any key to unpause."
    echo ""

    # close the client popup
    tmux display-popup -C -c $pair_tty

    # make tmux client read/write again
    tmux switch-client -c $pair_tty -t pair -r

    echo "Resumed pairing session (pair is read/write)"
  fi
}
