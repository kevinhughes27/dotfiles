#!/bin/zsh

# start a new pair programming session from my machine using ttyd
# the function will start ttyd and attach to the current tmux session.

function pair() {
  if [ -v $1 ]; then
    echo "USAGE: pair username"
    return 1
  fi

  # generate a new password
  local username="$1"
  local password=$(cat /dev/urandom | LC_ALL=C tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

  # ip for printing the link
  if [[ `uname` == "Darwin" ]]; then
    local ip=$(ipconfig getifaddr en0)
  else
    local ip=$(hostname -I | awk '{print $1}')
  fi

  # tmux session
  local tmux_session=$(tmux list-panes -t "$TMUX_PANE" -F '#S' | head -n1)

  # display a message when the pair connects to tmux
  local current_client=$(tmux list-clients -F '#{client_tty} #{client_flags}' | grep 'focused')
  local current_tty=$(echo $current_client | cut -d ' ' -f1)

  local message_layout="#[fill=#282c34 align=right]"
  local message_sep="#[bg=#282c34 fg=#c678dd]î‚º#[fg=default]"
  local message_style="$message_layout$message_sep#[bg=#c678dd bold]"

  tmux set-hook client-attached "display-message -c $current_tty -d 1000 '$message_style PAIR connected! '"
  tmux set-hook client-detached "display-message -c $current_tty -d 1000 '$message_style PAIR disconnected! '"

  # colors
  local theme='
    theme={
      "foreground":"#abb2bf",
      "background":"#282c34",
      "cursor": "#adadad",
      "black": "#5c6370",
      "red": "#e06c75",
      "green": "#98c379",
      "yellow": "#e5c07b",
      "blue": "#61afef",
      "magenta": "#c678dd",
      "cyan": "#56b6c2",
      "white": "#828997",
      "brightBlack": "#5c6370",
      "brightRed": "#e06c75",
      "brightGreen": "#98c379",
      "brightYellow": "#e5c07b",
      "brightBlue": "#61afef",
      "brightMagenta": "#c678dd",
      "brightCyan": "#56b6c2",
      "brightWhite": "#828997",
    }
  '
  theme=${theme//$'\n'} # remove newlines
  theme=${theme//$' '} # remove spaces

  echo "Starting pair session"
  echo "------------------------------------------------------------"
  echo "connect using a browser at: $ip:7681"
  echo "username: $username"
  echo "password: $password"
  echo ""
  echo "use 'pair-calibrate' to check screen sizes"
  echo "use 'pair-pause' to toggle readonly mode"
  echo "------------------------------------------------------------"

  # refresh tmux status line async and on exit
  ## disable background processes output
  setopt local_options no_notify no_monitor
  (sleep 0.1; tmux refresh-client && tmux set status on) &
  trap "tmux refresh-client" SIGINT

  # ttyd
  # documentation: https://github.com/tsl0922/ttyd/wiki/Client-Options
  #
  # --check-origin do not allow websocket connection from different origin
  # --index use a custom index.html file (see pair-rebuild-html below)
  ttyd \
    --writable \
    --credential "$username:$password" \
    --client-option titleFixed="pair session" \
    --client-option fontFamily="Hack Regular Nerd Font Complete" \
    --client-option fontSize=14 \
    --client-option disableLeaveAlert=true \
    --client-option ${theme} \
    --max-clients 1 \
    --check-origin \
    tmux attach-session -t $tmux_session -f ignore-size
}


function pair-rebuild() {
  local ttyd_dir="$HOME/Projects/ttyd"
  local font_path="$HOME/.local/share/fonts/Hack\ Regular\ Nerd\ Font\ Complete.ttf"

  pushd $ttyd_dir

  # pull ttyd
  git reset --hard
  git pull

  # add font css
  echo "@font-face { \
    font-family: 'Hack Regular Nerd Font Complete'; \
    font-style: normal; \
    font-weight: normal; \
    src: url($font_path); \
  }" >> html/src/style/index.scss

  # patch webpack
  patch -p1 <<'EOF'
--- a/html/webpack.config.js
+++ b/html/webpack.config.js
@@ -29,6 +29,10 @@ const baseConfig = {
                 test: /\.s?[ac]ss$/,
                 use: [devMode ? 'style-loader' : MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader'],
             },
+            {
+                test: /\.(ttf|otf|eot|woff|woff2)$/,
+                type: 'asset/inline',
+            },
         ],
     },
     resolve: {
EOF

  # rebuild html
  yarn --cwd "$ttyd_dir/html" install
  yarn --cwd "$ttyd_dir/html" build

  # rebuild ttyd
  make
  sudo make install

  popd
}


function pair-calibrate() {
  local program='
    from rich.layout import Layout
    from rich.live import Live
    from time import sleep

    layout = Layout()

    with Live(layout, screen=True):
        while True:
            sleep(0.5)
  '
  program=$(echo "$program" | sed -r 's/^\s{4}//g') # remove leading space

  python3 -c "$program"
}


function pair-pause() {
  local tmux_session=$(tmux list-panes -t "$TMUX_PANE" -F '#S' | head -n1)
  local pair_clients=$(tmux list-clients -t $tmux_session -F "#{client_pid} #{client_tty} #{client_readonly}")
  local pair_pid=$(pgrep -P $(pidof ttyd))
  local pair_client=$(echo $pair_clients | grep $pair_pid)
  local pair_tty=$(echo $pair_client | cut -d ' ' -f2)
  local pair_readonly=$(echo $pair_client | cut -d ' ' -f3)

  if (( $pair_readonly == 1 )); then
    echo "pair is already paused"
  else
    # make tmux client readonly
    tmux switch-client -c $pair_tty -t $tmux_session -r

    # display message to the client.
    local pause_message="****** Session Paused ******"
    (tmux display-popup -c $pair_tty -h 8 -w 30 echo "$pause_message" &)

    echo "Paused pairing session (pair is readonly now)"
    echo "---------------------------------------------"
    read -s -k "?Press any key to unpause."
    echo ""

    # close the client popup
    tmux display-popup -C -c $pair_tty

    # make tmux client read/write again
    tmux switch-client -c $pair_tty -t $tmux_session -r

    echo "Resumed pairing session (pair is read/write)"
  fi
}
